buildscript {
    repositories {
        mavenLocal()
        maven { url "https://maven.aliyun.com/nexus/content/groups/public" }
        maven { url "https://maven.aliyun.com/repository/gradle-plugin" }
        mavenCentral()
    }
    dependencies {
        classpath "gradle.plugin.org.jetbrains.intellij.plugins:gradle-intellij-plugin:+"
    }
}

apply plugin: 'org.jetbrains.intellij'

group pluginGroup
version pluginVersion

repositories {
    maven { url "https://maven.aliyun.com/nexus/content/groups/public" }
    mavenCentral()
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

dependencies {
    compile "com.github.godfather1103:commitrulecheck:1.2"
    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    compile 'com.squareup.okhttp3:okhttp:3.12.0'
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    implementation 'io.vavr:vavr:0.10.4'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

intellij {
    version ideaVersion
    type ideaType
    downloadSources Boolean.valueOf(sources)
    sameSinceUntilBuild Boolean.valueOf(isEAP)
    alternativeIdePath idePath

    patchPluginXml {
        sinceBuild pluginSinceBuild
        untilBuild pluginUntilBuild
    }

    publishPlugin {
        username publishUsername
        token = publishToken.isEmpty() ? ORG_GRADLE_PROJECT_intellijPublishToken : publishToken
        channels publishChannel
    }
}
